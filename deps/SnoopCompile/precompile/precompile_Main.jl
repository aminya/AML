function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    precompile(Tuple{typeof(Main.courseCheck), Int64, String, Float64, Array{String, 1}, Int64})
    precompile(Tuple{typeof(Main.courseCheck), Int64, String, Int64, Array{String, 1}, Int64})
    precompile(Tuple{typeof(Main.courseCheck), Int64, String, Int64, Array{String, 1}, Int64})
    precompile(Tuple{typeof(Main.courseCheck), UInt64, String, Float64, Array{String, 1}, Int64})
    precompile(Tuple{typeof(Main.courseCheck), UInt64, String, Float64, Array{String, 1}, Int64})
    precompile(Tuple{typeof(Main.courseCheck), UInt64, String, Float64, Array{String, 1}, Int64})
    precompile(Tuple{typeof(Main.GPAcheck), Nothing})
    precompile(Tuple{typeof(Main.courseCheck), Int64, String, Float64, Array{String, 1}, Int64})
    isdefined(Main, Symbol("##University#10")) && precompile(Tuple{getfield(Main, Symbol("##University#10")), String, Array{Main.Person, 1}, Type{Main.University}})
    isdefined(Main, Symbol("##Person#3")) && precompile(Tuple{getfield(Main, Symbol("##Person#3")), Int64, String, Int64, Array{String, 1}, Int64, Type{Main.Person}})
    isdefined(Main, Symbol("##Person#9")) && precompile(Tuple{getfield(Main, Symbol("##Person#9")), Int64, String, Int64, Array{String, 1}, Int64, Type{Main.Person}})
    isdefined(Main, Symbol("##Person#9")) && precompile(Tuple{getfield(Main, Symbol("##Person#9")), Int64, String, Float64, Array{String, 1}, Int64, Type{Main.Person}})
    isdefined(Main, Symbol("##Person#9")) && precompile(Tuple{getfield(Main, Symbol("##Person#9")), Int64, String, Int64, Array{String, 1}, Int64, Type{Main.Person}})
    isdefined(Main, Symbol("##Person#3")) && precompile(Tuple{getfield(Main, Symbol("##Person#3")), Int64, String, Float64, Array{String, 1}, Int64, Type{Main.Person}})
    isdefined(Main, Symbol("##University#4")) && precompile(Tuple{getfield(Main, Symbol("##University#4")), String, Array{Main.Person, 1}, Type{Main.University}})
    precompile(Tuple{typeof(Main.GPAcheck), Nothing})
end
